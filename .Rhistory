g1$clase<-g1$dista<-NULL
g3<-rbind(g1,g2)
ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=g3)+geom_point()
input=data.frame(numbergroups=3,numbercenters=3)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
g1$clase<-g1$dista<-NULL
g3<-rbind(g1,g2)
ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=g3)+geom_point()
input=data.frame(numbergroups=3,numbercenters=3)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
#g1$clase<-g1$dista<-NULL
#g3<-rbind(g1,g2)
#ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=g3)+geom_point()
input=data.frame(numbergroups=3,numbercenters=3)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
w=1
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
View(g2)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
input=data.frame(numbergroups=3,numbercenters=3,iterationnum=4)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=aguardar[[input$iterationnum]])+geom_point()
runApp('ShinyApp/k-means_visualization')
View(g1)
View(g2)
g2$clase
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
input=data.frame(numbergroups=3,numbercenters=3,iterationnum=4)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
w=2
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
View(g2)
runApp('ShinyApp/k-means_visualization')
w=1
input=data.frame(numbergroups=3,numbercenters=3,iterationnum=4)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
g2$V3<-g2$clase
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
w=2
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
g2$V3<-g2$clase
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1
q1[qq]%>%as.character()
g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
g1
g1 %>%select(V1,V2) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1
g1 %>%select(V1,V2,one_of(q1[qq]))
g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character()))
g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character()))
g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2)
g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
pointsmin<-g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
g1$clase<-g1$dista<-NULL
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
input=data.frame(numbergroups=3,numbercenters=3,iterationnum=4)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
g2$V3<-g2$clase
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1$clase<-g1$dista<-NULL
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=aguardar[[input$iterationnum]])+geom_point()
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
runApp('ShinyApp/k-means_visualization')
g1a<-g1
runApp('ShinyApp/k-means_visualization')
knitr::opts_chunk$set(echo = FALSE)
input=data.frame(numbergroups=3,numbercenters=3,iterationnum=4)
set.seed(1991)
g1<-map_df(.x = 1:input$numbergroups,generatePoints)
g1$V3<-as.factor(g1$V3)
g1$icon<-"point"
g2<-g1[sample(seq_along(g1$V1),input$numbercenters),]
g2$icon<-"star"
q1<-g2$clase<-g2$V3<-as.factor(1:input$numbercenters)
aguardar<-list()
for(w in 1:10){
if(w!=1){
g2<-pointsmin %>%group_by(clase) %>% summarise(V1=mean(V1),V2=mean(V2))
}
g2$V3<-g2$clase
for (i in g2$V3){
g1[,i]<-(g1$V1-g2$V1[g2$V3==i])^2+(g1$V2-g2$V2[g2$V3==i])^2
}
qq<-q1 %in% g2$V3
pointsmin<-g1 %>%select(V1,V2,one_of(q1[qq]%>%as.character())) %>%
gather(clase,dista,one_of(q1[qq]%>%as.character())) %>%
group_by(V1,V2) %>% summarise(dista=min(dista))
g1$clase<-g1$dista<-NULL
g1<-g1 %>% gather(clase,dista,one_of(q1[qq]%>%as.character()))
pointsmin<-left_join(pointsmin,g1,by=c("V1","V2","dista"))
g1<-pointsmin
g1a<-g1
g1a$icon="point"
g1a$dista<-g1a$V3<-NULL
g2a<-g2
g2a$icon="star"
g1a<-select(as.data.frame(g1a),V1,V2,icon,clase)
g2a<-select(g2a,V1,V2,icon,clase)
aguardar[[w]]<-rbind(g1a,g2a)
}
ggplot(aes(x=V1,y=V2,color=clase,shape=icon,size=icon),data=aguardar[[input$iterationnum]])+geom_point()
mygrafica<-map_df(1:3,generatePoints)
mygrafica
map_df(1:3,generatePoints) %>% ggplot(aes(x=V1,y=V2,color=as.factor(V3)))+geom_point()
library(dplyr)
library(caret)
library(purrr)
library(tidyr)
rm(list=ls())
setwd("~/PracticalMLProject")
if(!file.exists("training.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
"training.csv")
}
if(!file.exists("testing.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
"testing.csv")
}
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
testing<-read.csv("testing.csv")
colsnum<-colnames(training)[sapply(training,class)=="numeric"]
nonmissings<-map_df(training,~sum(!is.na(.x)))
nonmissings<-gather(nonmissings,variable,valor)
difvalues<-map_df(training,~length(unique(.x)))
difvalues<-gather(difvalues,variable,valor)
to_remove<-difvalues$variable[difvalues$valor<3]
training<-training %>% select(-one_of(to_remove))
trainingpre=preProcess(training,c("center","scale","knnImpute"))
training2<-predict(trainingpre,training)
modelo1<-train(data=training2,method="lda",classe~.)
modelo2<-train(data=training2,method="rf",classe~.,ntree=3)
modelo2<-train(data=training2,method="parRF",classe~.)
sum(!training2$classe==predict(modelo1,training2))
sum(!training2$classe==predict(modelo2,training2))
install.packages("RANN")
library(dplyr)
library(caret)
library(purrr)
library(tidyr)
rm(list=ls())
setwd("~/PracticalMLProject")
if(!file.exists("training.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
"training.csv")
}
if(!file.exists("testing.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
"testing.csv")
}
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
testing<-read.csv("testing.csv")
colsnum<-colnames(training)[sapply(training,class)=="numeric"]
nonmissings<-map_df(training,~sum(!is.na(.x)))
nonmissings<-gather(nonmissings,variable,valor)
difvalues<-map_df(training,~length(unique(.x)))
difvalues<-gather(difvalues,variable,valor)
to_remove<-difvalues$variable[difvalues$valor<3]
training<-training %>% select(-one_of(to_remove))
trainingpre=preProcess(training,c("center","scale","knnImpute"))
training2<-predict(trainingpre,training)
modelo1<-train(data=training2,method="lda",classe~.)
modelo2<-train(data=training2,method="rf",classe~.,ntree=3)
modelo3<-train(data=training2,method="gbm",classe~.)
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
incross<-createDataPartition(y=training$classe,p=0.7,list=FALSE)
incross<-createDataPartition(y=training$classe,p=0.3,list=FALSE)
incross<-createDataPartition(y=training$classe,p=0.3,list=FALSE)
crossv<-training[incross,]
training<-training[-incross,]
trainingpre=preProcess(training,c("center","scale","knnImpute","nzv"))
training2<-predict(trainingpre,training)
trainingpre=preProcess(training,c("center","scale","knnImpute","zv"))
trainingpre=preProcess(training,c("nzv","center","scale","knnImpute"))
training2<-predict(trainingpre,training)
incross<-createDataPartition(training$classe.p=0.3)
incross<-createDataPartition(training$classe,p=0.3)
incross
incross[[1]]
incross[[2]]
incross[1]
str(incross)
incross<-createDataPartition(training$classe,p=0.3,list=FALSE)
crossv<-training[incross]
training<-training[-incross]
trainingpre=preProcess(training,c("center","scale","knnImpute"))
library(dplyr)
library(caret)
library(purrr)
library(tidyr)
rm(list=ls())
setwd("~/PracticalMLProject")
if(!file.exists("training.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
"training.csv")
}
if(!file.exists("testing.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
"testing.csv")
}
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
testing<-read.csv("testing.csv")
colsnum<-colnames(training)[sapply(training,class)=="numeric"]
nonmissings<-map_df(training,~sum(!is.na(.x)))
nonmissings<-gather(nonmissings,variable,valor)
difvalues<-map_df(training,~length(unique(.x)))
difvalues<-gather(difvalues,variable,valor)
to_remove<-difvalues$variable[difvalues$valor<3]
training<-training %>% select(-one_of(to_remove))
incross<-createDataPartition(training$classe,p=0.3,list=FALSE)
library(dplyr)
library(caret)
library(purrr)
library(tidyr)
rm(list=ls())
setwd("~/PracticalMLProject")
if(!file.exists("training.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
"training.csv")
}
if(!file.exists("testing.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
"testing.csv")
}
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
testing<-read.csv("testing.csv")
colsnum<-colnames(training)[sapply(training,class)=="numeric"]
nonmissings<-map_df(training,~sum(!is.na(.x)))
nonmissings<-gather(nonmissings,variable,valor)
difvalues<-map_df(training,~length(unique(.x)))
difvalues<-gather(difvalues,variable,valor)
to_remove<-difvalues$variable[difvalues$valor<3]
to_remove
training<-training %>% dplyr::select(-one_of(to_remove))
incross<-createDataPartition(training$classe,p=0.3,list=FALSE)
crossv<-training[incross,]
training<-training[-incross.]
incross<-createDataPartition(training$classe,p=0.3,list=FALSE)
crossv<-training[incross,]
training<-training[-incross.]
training<-training[-incross,]
training
trainingpre=preProcess(training,c("center","scale","knnImpute"))
training2<-predict(trainingpre,training)
modelo1<-train(data=training2,method="lda",classe~.)
modelo3<-train(data=training2,method="parRF",classe~.)
library(doParallel)
modelo3<-train(data=training2,method="parRF",classe~.)
library(dplyr)
library(caret)
library(purrr)
library(tidyr)
library(doParallel)
rm(list=ls())
registerDoParallel(cores=3)
setwd("~/PracticalMLProject")
if(!file.exists("training.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
"training.csv")
}
if(!file.exists("testing.csv")){
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
"testing.csv")
}
training<-read.csv("training.csv",stringsAsFactors = FALSE,na.strings = c("","NA","<NA>","#DIV/0!"))
testing<-read.csv("testing.csv")
colsnum<-colnames(training)[sapply(training,class)=="numeric"]
nonmissings<-map_df(training,~sum(!is.na(.x)))
nonmissings<-gather(nonmissings,variable,valor)
difvalues<-map_df(training,~length(unique(.x)))
difvalues<-gather(difvalues,variable,valor)
to_remove<-difvalues$variable[difvalues$valor<3]
training<-training %>% dplyr::select(-one_of(to_remove))
incross<-createDataPartition(training$classe,p=0.3,list=FALSE)
crossv<-training[incross,]
training<-training[-incross,]
trainingpre=preProcess(training,c("center","scale","knnImpute"))
training2<-predict(trainingpre,training)
modelo3<-train(data=training2,method="parRF",classe~.)
modelo2<-train(data=training2,method="parRF",classe~.,ntree=3)
modelo1<-train(data=training2,method="lda",classe~.)
